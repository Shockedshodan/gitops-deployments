apiVersion: v1
kind: Namespace
metadata:
  name: vault
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    create-ca-bundle: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-kes-secret
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    replicator.v1.mittwald.de/replicate-from: minio-tenant/minio-kes-secret
data: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vault-certificate
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
spec:
  secretName: vault-tls
  issuerRef:
    name: private-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  privateKey:
    algorithm: RSA
    size: 2048
  subject:
    organizations:
      - system:nodes
  commonName: system:node:*.vault.svc.cluster.local
  isCA: false
  # TODO: Try restricting usages to digital signature, key encipherment, and
  # server auth
  usages:
  - digital signature
  - key encipherment
  - data encipherment
  - server auth
  - client auth
  dnsNames:
  - "*.vault-internal"
  - "*.vault-internal.vault.svc.cluster.local"
  - "*.vault"
  - "vault-internal.vault.svc.cluster.local"
  ipAddresses:
  - 127.0.0.1
  - 192.168.49.2
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
  annotations:
    argocd.argoproj.io/compare-options: ServerSideDiff=true
    argocd.argoproj.io/sync-wave: "-1"
  finalizers:
   - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
  - repoURL: https://helm.releases.hashicorp.com
    chart: vault
    targetRevision: 0.28.0
    helm:
      valuesObject:
        global:
          enabled: true
          tlsDisable: false
        injector:
          enabled: false
        server:
          enabled: true
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
            limits:
              memory: 256Mi
              cpu: 250m
          extraEnvironmentVars:
            VAULT_CACERT: /vault/userconfig/vault-tls/ca.crt
            VAULT_TLSCERT: /vault/userconfig/vault-tls/tls.crt
            VAULT_TLSKEY: /vault/userconfig/vault-tls/tls.key
          volumes:
            - name: userconfig-vault-tls
              secret:
                defaultMode: 420
                secretName: vault-tls
          volumeMounts:
            - mountPath: /vault/userconfig/vault-tls
              name: userconfig-vault-tls
              readOnly: true
          standalone:
            enabled: false
          service:
            enabled: true
            active:
              enabled: false
            standby:
              enabled: false
          dataStorage:
            enabled: true
            size: 10Gi
            storageClass: local-path
          auditStorage:
            enabled: true
            size: 10Gi
            storageClass: local-path
          ui:
            enabled: true
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
            #   # NOTE: To make sure the certificate is trusted by clients we should use
            #   # something like Let's Encrypt
            #   cert-manager.io/cluster-issuer: "private-ca-issuer"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            # tls:
            # - hosts:
            #   - vault.integration
            #   secretName: vault-ingress
            hosts:
            - host: vault.integration
            activeService: false
          affinity: ""
          ha:
            enabled: true
            replicas: 3
            raft:
              enabled: true
              setNodeId: true
              config: |
                disable_mlock = true
                ui = true

                listener "tcp" {
                  address = "[::]:8200"
                  cluster_address = "[::]:8201"
                  tls_cert_file = "/vault/userconfig/vault-tls/tls.crt"
                  tls_key_file  = "/vault/userconfig/vault-tls/tls.key"
                  tls_client_ca_file = "/vault/userconfig/vault-tls/ca.crt"
                }

                storage "raft" {
                  path = "/vault/data"
                }

                service_registration "kubernetes" {}
  destination:
    server: "https://kubernetes.default.svc"
    namespace: vault
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kes-policy
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
data:
  kes-policy.hcl: |
    path "kv/data/minio-tenant/*" {
      capabilities = [ "create", "read" ]
    }
    path "kv/metadata/minio-tenant/*" {
      capabilities = [ "list", "delete" ]
    }
